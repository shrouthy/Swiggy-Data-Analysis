-- Display all customers who live in 'Delhi'.
select name from customers where city = "Delhi";

-- Find the average rating of all restaurants in 'Mumbai'.
select avg(feedback.rating) Avg_Rating from feedback left join customers on feedback.customer_id = customers.customer_id where customers.city = "Mumbai";

-- List all customers who have placed at least one order.
select distinct customers.customer_id, customers.name from customers join orders on customers.customer_id = orders.customer_id;

-- Display the total number of orders placed by each customer.
select c.customer_id, c.name, count(o.order_id) as total_orders from customers c left join orders o on c.customer_id = o.customer_id group by c.customer_id, c.name;

-- Find the total revenue generated by each restaurant.
select r.restaurant_id, r.name, sum(o.total_amount) as revenue from restaurants r left join orders o on r.restaurant_id = o.restaurant_id group by r.restaurant_id, r.name;

-- Find the top 5 restaurants with the highest average rating.
select restaurant_id, name, avg(rating) avg_rating from restaurants group by restaurant_id, name order by avg(rating) desc limit 5;

-- Display all customers who have never placed an order.
select c.customer_id, c.name from customers c left join orders o on c.customer_id = o.customer_id where o.customer_id is null;

-- Find the number of orders placed by each customer in 'Mumbai'.
select c.customer_id, c.name, c.city, count(o.order_id) total_orders from customers c left join orders o on c.customer_id = o.customer_id where c.city = "Mumbai" group by c.customer_id, c.name, c.city;

-- Display all orders placed in the last 30 days.
select order_id from orders where datediff(curdate(), order_date) <=30; -- returns null because it's taking today's date

-- List all delivery partners who have completed more than 1 delivery
select partner_id, count(partner_id) deliveries from orderdelivery group by partner_id having count(partner_id) > 1;

-- Find the customers who have placed orders on exactly three different days.
select c.customer_id, c.name from customers c join orders o on c.customer_id = o.customer_id group by c.customer_id, c.name having count(distinct o.order_date) =3;